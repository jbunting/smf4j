<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.bunting.smf4j</groupId>
	<artifactId>project</artifactId>
	<name>smf4j</name>
	<packaging>pom</packaging>
	<version>0.1.0-SNAPSHOT</version>
	<description>
		A generic metric reporting facade -- in the vein of slf4j. The intent is to back it with one of the various 
		available libraries -- dropwizard metrics, javasimon, perf4j, etc. This way, much like logging, your various
		libraries can decide what metrics to publish, while your runtime applications can decide exactly how to handle 
		(log, display, aggregate, act upon) those values.
	</description>
	<modules>
		<module>smf4j-api</module>
		<module>smf4j-dropwizard</module>
	</modules>

	<scm>
		<url>https://github.com/jbunting/smf4j</url>
		<connection>scm:git:git://github.com/jbunting/smf4j.git</connection>
		<developerConnection>scm:git:git@github.com:jbunting/smf4j.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-core</artifactId>
				<version>3.1.0</version>
			</dependency>
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-annotation</artifactId>
				<version>3.1.0</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>2.3.8</version>
			</dependency>
			<dependency>
				<groupId>org.kohsuke.metainf-services</groupId>
				<artifactId>metainf-services</artifactId>
				<version>1.5</version>
			</dependency>

			<!-- Test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-core</artifactId>
				<version>1.0-groovy-2.4</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.github.goldin</groupId>
				<artifactId>spock-extensions</artifactId>
				<version>0.1.4</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>nl.jqno.equalsverifier</groupId>
				<artifactId>equalsverifier</artifactId>
				<version>1.5.1</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<compilerId>groovy-eclipse-compiler</compilerId>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>2.9.0-01</version>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-batch</artifactId>
						<version>2.3.4-01</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18</version>
				<configuration>
					<forkCount>0.5C</forkCount>
					<reuseForks>false</reuseForks>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.2</version>
				<configuration>
					<doclet>ch.raffael.doclets.pegdown.PegdownDoclet</doclet>
					<docletArtifact>
						<groupId>ch.raffael.pegdown-doclet</groupId>
						<artifactId>pegdown-doclet</artifactId>
						<version>1.1.1</version>
					</docletArtifact>
					<useStandardDocletOptions>true</useStandardDocletOptions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
